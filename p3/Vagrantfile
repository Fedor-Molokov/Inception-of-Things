required_plugins = %w( vagrant-vbguest )
required_plugins.each do |plugin|
  system "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
end

Vagrant.configure("2") do |config|
	config.vm.define "IoT-server" do |server|
		server.vm.box = "centos/8"
		server.vm.network "forwarded_port", id: "ssh", host: 2222, guest: 22
		server.vm.network "forwarded_port", host: 80, guest: 80
		server.vm.network "forwarded_port", host: 443, guest: 443
		server.vm.hostname = "IoT-server"

		server.vm.provision "shell" do |sh|
			if File.file?("#{Dir.home}/.ssh/id_rsa")
				ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
			else
				puts "No SSH key found. You will need to remedy this before pushing to the repository."
			end
			sh.inline = <<-SHELL
			if grep -sq "#{ssh_pub_key}" /home/vagrant/.ssh/authorized_keys; then
			  echo "SSH keys already provisioned."
			  exit 0;
			fi
			echo "SSH key provisioning."
			mkdir -p /home/vagrant/.ssh/
			touch /home/vagrant/.ssh/authorized_keys
			echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
			echo #{ssh_pub_key} > /home/vagrant/.ssh/id_rsa.pub
			chmod 644 /home/vagrant/.ssh/id_rsa.pub
			chown -R vagrant:vagrant /home/vagrant
			sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config    
			systemctl restart sshd.service
			exit 0
		  SHELL
		end

		server.vm.provider "virtualbox" do |vb|
			vb.name = "IoT-server"
			vb.memory = 8000
			vb.cpus = 4
		end

		if Vagrant.has_plugin?("vagrant-vbguest")
			config.vbguest.auto_update = false
		end
		
	end

end