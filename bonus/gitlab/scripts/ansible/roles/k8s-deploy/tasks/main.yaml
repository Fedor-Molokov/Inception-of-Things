---
- name: Install the latest version of python
  dnf:
    name: python3
    state: latest
  become: true

- name: Update python required plugins
  command: pip3 install openshift pyyaml kubernetes
  become: true

- name: Update /etc/hosts file
  blockinfile:
    dest: /etc/hosts
    content: "{{ lookup('file', '../../confs/hosts/hosts') }}"
    state: present
  become: true

- name: Create ingress-nginx namespace
  k8s:
    name: ingress-nginx
    api_version: v1
    kind: namespace
    state: present

- name: Create argocd namespace
  k8s:
    name: argocd
    api_version: v1
    kind: namespace
    state: present

- name: Create dev namespace
  k8s:
    name: dev
    api_version: v1
    kind: namespace
    state: present

- name: Create a Ingress-Nginx from file
  k8s:
    state: present
    definition: "{{ lookup('file', '../../confs/ingress-nginx/ingress-nginx.yaml') | from_yaml_all }}"

- name: Wait 120 seconds for ingress-nginx deploy
  wait_for:
    timeout: 120

- name: Create an argocd from file
  k8s:
    state: present
    definition: "{{ lookup('file', '../../confs/argo/argocd.yaml') | from_yaml_all }}"

- name: Create ui application
  k8s:
    state: present
    definition: "{{ lookup('file', '../../confs/ui-app/ui-app.yaml') | from_yaml_all }}"

- name: Wait 100 seconds for argocd deploy
  wait_for:
    timeout: 100

- name: Create a argocd ingress from file
  k8s:
    state: present
    definition: "{{ lookup('file', '../../confs/argo/ingress.yaml') | from_yaml_all }}"

- name: Get login token from argocd
  ansible.builtin.shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode && echo
  register: argocd_token

- name: Show argocd token
  debug: 
    msg: "The argocd login token is: {{ argocd_token.stdout }}"

- name: Press enter when you entried into argocd dashboard
  pause:

